<ResourceDictionary
    x:Class="PowerupsLite.When.WhenTemplates"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cont="clr-namespace:NINA.Sequencer.Container;assembly=NINA.Sequencer"
    xmlns:filter="clr-namespace:NINA.Core.Model;assembly=NINA.Core"
    xmlns:local="clr-namespace:PowerupsLite.When"
    xmlns:logic="clr-namespace:NINA.Sequencer.Logic;assembly=NINA.Sequencer"
    xmlns:mini="clr-namespace:NINA.View.Sequencer.MiniSequencer;assembly=NINA.Sequencer"
    xmlns:nina="clr-namespace:NINA.View.Sequencer;assembly=NINA.Sequencer"
    xmlns:ninactrl="clr-namespace:NINA.CustomControlLibrary;assembly=NINA.CustomControlLibrary"
    xmlns:ns="clr-namespace:NINA.Core.Locale;assembly=NINA.Core"
    xmlns:rules="clr-namespace:NINA.Core.Utility.ValidationRules;assembly=NINA.Core"
    xmlns:util="clr-namespace:NINA.Core.Utility;assembly=NINA.Core"
    xmlns:behaviors="clr-namespace:NINA.Sequencer.Behaviors;assembly=NINA.Sequencer"
    xmlns:wpfutil="clr-namespace:NINA.WPF.Base.Utility;assembly=NINA.WPF.Base"
    xmlns:s="clr-namespace:System;assembly=mscorlib"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors">

    <ControlTemplate x:Key="PowerupsButtons">
        <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">

            <Button
                   Width="25"
                   Height="25"
                   Margin="25,0,0,0"
                   HorizontalAlignment="Right"
                   VerticalAlignment="Center"
                   Command="{Binding DisableEnableCommand}"
                   Style="{StaticResource SecondaryBackgroundButton}"
                   Visibility="{Binding DetachCommand, Converter={StaticResource NullToVisibilityCollapsedConverter}}">
                <Grid>
                    <Path
                           Margin="5"
                           Data="{StaticResource PowerSVG}"
                           Fill="{StaticResource ButtonForegroundBrush}"
                           Stretch="Uniform"
                           UseLayoutRounding="True" />
                </Grid>
                <Button.ToolTip>
                    <ToolTip>
                        <TextBlock Foreground="{StaticResource PrimaryBrush}" Text="{ns:Loc Lbl_SequenceContainer_Reset_Tooltip}" />
                    </ToolTip>
                </Button.ToolTip>
            </Button>

            <Button
                   Width="25"
                   Height="25"
                   Margin="25,0,0,0"
                   HorizontalAlignment="Right"
                   VerticalAlignment="Center"
                   Command="{Binding ResetProgressCommand}"
                   Style="{StaticResource SecondaryBackgroundButton}"
                   Visibility="{Binding DetachCommand, Converter={StaticResource NullToVisibilityCollapsedConverter}}">
                <Grid>
                    <Path
                           Margin="5"
                           Data="{StaticResource RefreshSVG}"
                           Fill="{StaticResource ButtonForegroundBrush}"
                           Stretch="Uniform"
                           UseLayoutRounding="True" />
                </Grid>
                <Button.ToolTip>
                    <ToolTip>
                        <TextBlock Foreground="{StaticResource PrimaryBrush}" Text="{ns:Loc Lbl_SequenceContainer_Reset_Tooltip}" />
                    </ToolTip>
                </Button.ToolTip>
            </Button>

            <Button
                    Width="25"
                    Height="25"
                    Margin="25,0,0,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Command="{Binding DetachCommand}"
                    Style="{StaticResource SecondaryBackgroundButton}"
                    Visibility="{Binding DetachCommand, Converter={StaticResource NullToVisibilityCollapsedConverter}}">
                <Grid>
                    <Path
                            Margin="5"
                            Data="{StaticResource TrashCanSVG}"
                            Fill="{StaticResource ButtonForegroundBrush}"
                            Stretch="Uniform"
                            UseLayoutRounding="True" />
                </Grid>
                <Button.ToolTip>
                    <ToolTip>
                        <TextBlock Foreground="{StaticResource PrimaryBrush}" Text="{ns:Loc Lbl_SequenceContainer_Delete_Tooltip}" />
                    </ToolTip>
                </Button.ToolTip>
            </Button>

            <Button
                    x:Name="CloneContainerButton"
                    Width="25"
                    Height="25"
                    Margin="25,0,0,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Command="{Binding AddCloneToParentCommand}"
                    Style="{StaticResource SecondaryBackgroundButton}"
                    Visibility="{Binding AddCloneToParentCommand, Converter={StaticResource NullToVisibilityCollapsedConverter}}">
                <Grid>
                    <Path
                            Margin="5"
                            Data="{StaticResource CopySVG}"
                            Fill="{StaticResource ButtonForegroundBrush}"
                            Stretch="Uniform"
                            UseLayoutRounding="True" />
                </Grid>
                <Button.ToolTip>
                    <ToolTip>
                        <TextBlock Foreground="{StaticResource PrimaryBrush}" Text="{ns:Loc Lbl_SequenceContainer_Duplicate_Tooltip}" />
                    </ToolTip>
                </Button.ToolTip>
            </Button>

            <Button
                    x:Name="MoveUpButton"
                    Width="25"
                    Height="25"
                    Margin="25,0,0,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Command="{Binding MoveUpCommand}"
                    Style="{StaticResource SecondaryBackgroundButton}">
                <Grid>
                    <Path
                            Margin="5"
                            Data="{StaticResource ArrowUpSVG}"
                            Fill="{StaticResource ButtonForegroundBrush}"
                            Stretch="Uniform"
                            UseLayoutRounding="True" />
                </Grid>
                <Button.ToolTip>
                    <ToolTip>
                        <TextBlock Foreground="{StaticResource PrimaryBrush}" Text="{ns:Loc Lbl_SequenceContainer_MoveUp_Tooltip}" />
                    </ToolTip>
                </Button.ToolTip>
            </Button>
            <Button
                    x:Name="MoveDownButton"
                    Width="25"
                    Height="25"
                    Margin="10,0,5,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Command="{Binding MoveDownCommand}"
                    Style="{StaticResource SecondaryBackgroundButton}"
                    Visibility="{Binding MoveDownCommand, Converter={StaticResource NullToVisibilityCollapsedConverter}}">
                <Grid>
                    <Path
                            Margin="5"
                            Data="{StaticResource ArrowDownSVG}"
                            Fill="{StaticResource ButtonForegroundBrush}"
                            Stretch="Uniform"
                            UseLayoutRounding="True" />
                </Grid>
                <Button.ToolTip>
                    <ToolTip>
                        <TextBlock Foreground="{StaticResource PrimaryBrush}" Text="{ns:Loc Lbl_SequenceContainer_MoveDown_Tooltip}" />
                    </ToolTip>
                </Button.ToolTip>
            </Button>
        </StackPanel>
    </ControlTemplate>

    <Style x:Name="PowerupsStyle" TargetType="{x:Type ninactrl:DetachingExpander}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ninactrl:DetachingExpander}">
                    <Border
                        Margin="0,5,0,5"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Focusable="False"
                        UseLayoutRounding="True">
                        <DockPanel>
                            <ToggleButton
                                x:Name="HeaderSite"
                                MinWidth="0"
                                MinHeight="0"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                DockPanel.Dock="Top"
                                FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                FontStretch="{TemplateBinding FontStretch}"
                                FontStyle="{TemplateBinding FontStyle}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <StackPanel>
                                                        <Border
                                                            x:Name="topBorder"
                                                            BorderBrush="{StaticResource SecondaryBackgroundBrush}"
                                                            BorderThickness="1,1,0,0">
                                                            <Grid
                                                                 x:Name="Head"
                                                                 Background="{StaticResource SecondaryBackgroundBrush}"
                                                                 UseLayoutRounding="True">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="30" />
                                                                    <ColumnDefinition Width="30" />
                                                                    <ColumnDefinition Width="*" />
                                                                </Grid.ColumnDefinitions>
                                                                <Path
                                                                    x:Name="iconarrow"
                                                                    Grid.Column="0"
                                                                    Width="10"
                                                                    Height="10"
                                                                    Margin="10,0,10,0"
                                                                    Data="{StaticResource ArrowRightSVG}"
                                                                    Fill="{StaticResource ButtonForegroundBrush}"
                                                                    Stretch="Uniform"
                                                                    UseLayoutRounding="True" />
                                                                <Path
                                                                    x:Name="icon"
                                                                    Grid.Column="1"
                                                                    Margin="5,0,3,0"
                                                                    Data="{StaticResource BoxClosedSVG}"
                                                                    Fill="{StaticResource ButtonForegroundBrush}"
                                                                    Stretch="Uniform"
                                                                    UseLayoutRounding="True" />
                                                                <ContentPresenter
                                                                    Grid.Column="2"
                                                                    Margin="4,0,0,0"
                                                                    HorizontalAlignment="Left"
                                                                    VerticalAlignment="Center"
                                                                    RecognizesAccessKey="True"
                                                                    UseLayoutRounding="True">
                                                                    <i:Interaction.Behaviors>
                                                                        <!--  This gives the ability to drag and drop a sequence container by its header  -->
                                                                        <behaviors:DragDropBehavior />
                                                                    </i:Interaction.Behaviors>
                                                                </ContentPresenter>
                                                            </Grid>
                                                        </Border>
                                                    </StackPanel>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="true">
                                                            <Setter TargetName="icon" Property="Data" Value="{StaticResource BoxSVG}" />
                                                            <Setter TargetName="iconarrow" Property="Data" Value="{StaticResource ArrowDownSVG}" />
                                                            <Setter TargetName="iconarrow" Property="Margin" Value="5,0,10,0" />
                                                        </Trigger>
                                                        <Trigger Property="IsChecked" Value="false">
                                                            <Setter TargetName="topBorder" Property="BorderThickness" Value="1,1,1,1" />
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="Head" Property="Background" Value="{StaticResource ButtonBackgroundSelectedBrush}" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <Border x:Name="ContainerBorder" BorderBrush="{StaticResource SecondaryBackgroundBrush}">
                                <ContentPresenter
                                                    x:Name="ExpandSite"
                                                    Margin="{TemplateBinding Padding}"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    Focusable="false" />
                            </Border>
                       </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContainerBorder" Property="BorderThickness" Value="10,0,0,15" />
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContainerBorder" Property="BorderThickness" Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate DataType="{x:Type local:TemplateByReference}">
        <Border>
            <Border.Resources>
                <wpfutil:SharedResourceDictionary Source="/NINA.Sequencer;component/Resources/Styles/ProgressStyle.xaml" />
            </Border.Resources>
            <i:Interaction.Behaviors>
                <!--  Drop area above and below the Sequence Container  -->
                <behaviors:DragOverBehavior
                  AllowDragCenter="False"
                  DragAboveSize="25"
                  DragBelowSize="15" />
            </i:Interaction.Behaviors>
            <ninactrl:DetachingExpander>
                <ninactrl:DetachingExpander.Header>
                    <Grid
                      MinHeight="35"
                      Margin="0"
                      HorizontalAlignment="{Binding HorizontalAlignment, RelativeSource={RelativeSource AncestorType=ContentPresenter}, Mode=OneWayToSource}"
                      Background="{StaticResource SecondaryBackgroundBrush}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock 
                                   Foreground="{StaticResource ButtonForegroundBrush}"
                                MinHeight="30"
                                 Margin="10,10,10,0"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 Text="Template By Reference" />
                                <TextBlock
                                  Foreground="{StaticResource ButtonForegroundBrush}"
                                  MinHeight="30"
                                  Margin="10,10,10,0"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Opacity="0.9"
                                  Text="Template Name:" />
                                <ComboBox
                                  Foreground="{StaticResource ButtonForegroundBrush}"
                                  Height="24"
                                  Margin="10,-4,0,0"
                                  DisplayMemberPath="Container.Name"
                                  ItemsSource="{Binding SortedTemplates}"
                                  SelectedItem="{Binding SelectedTemplate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  SelectedValuePath="Container.Name" />
                            </StackPanel>
                        </Grid>
                        <Border Grid.Column="1" Background="{StaticResource SecondaryBackgroundBrush}">
                            <ContentPresenter
                              Margin="2,0,10,0"
                              HorizontalAlignment="Right"
                              Content="{Binding}"
                              DockPanel.Dock="Right"
                              Style="{StaticResource ProgressPresenter}" />
                        </Border>
                        <Border
                         x:Name="ButtonCommands"
                         Grid.Column="2"
                         HorizontalAlignment="Stretch"
                         Background="{StaticResource SecondaryBackgroundBrush}">
                            <Control Template="{StaticResource PowerupsButtons}" />
                        </Border>
                    </Grid>
                </ninactrl:DetachingExpander.Header>
                <StackPanel Grid.Row="1" Orientation="Vertical">
                    <Border
                      MinHeight="35"
                      Margin="0,0,0,0"
                      BorderBrush="{StaticResource BorderBrush}"
                      BorderThickness="1">
                        <Grid Background="{StaticResource BackgroundBrush}" DataContext="{Binding Instructions}">
                            <ItemsControl MinHeight="35" ItemsSource="{Binding Items}" />
                            <TextBlock
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              FontStyle="Italic"
                              Opacity="0.4"
                              Text="The specified template will go here..."
                              Visibility="{Binding Items.Count, Converter={StaticResource InverseZeroToVisibilityConverter}}" />
                            <i:Interaction.Behaviors>
                                <behaviors:DragOverBehavior DragAboveSize="0" DragBelowSize="0" />
                                <behaviors:DropIntoBehavior AllowedDragDropTypesString="NINA.Sequencer.TemplatedSequenceContainer" OnDropCommand="DropIntoTemplateCommand" />
                            </i:Interaction.Behaviors>
                        </Grid>
                    </Border>
                </StackPanel>
            </ninactrl:DetachingExpander>
        </Border>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:ForEachInArray}">
        <Border>
            <Border.Resources>
                <wpfutil:SharedResourceDictionary Source="/NINA.Sequencer;component/Resources/Styles/ProgressStyle.xaml" />
            </Border.Resources>
            <i:Interaction.Behaviors>
                <!--  Drop area above and below the Sequence Container  -->
                <behaviors:DragOverBehavior
                 AllowDragCenter="False"
                 DragAboveSize="25"
                 DragBelowSize="15" />
            </i:Interaction.Behaviors>
            <ninactrl:DetachingExpander>
                <ninactrl:DetachingExpander.Header>
                    <Grid
                     MinHeight="45"
                     Margin="0"
                     HorizontalAlignment="{Binding HorizontalAlignment, RelativeSource={RelativeSource AncestorType=ContentPresenter}, Mode=OneWayToSource}"
                     Background="{StaticResource SecondaryBackgroundBrush}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock 
                                MinHeight="25"
                                Margin="10,10,10,0"
                                Foreground="White"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Text="For Each in Array" />
                            <Border
                              Width="20"
                              Height="20"
                              Margin="5,0,5,0"
                              Background="{StaticResource NotificationErrorBrush}"
                              BorderBrush="Transparent"
                              CornerRadius="10">
                                <Border.Visibility>
                                    <PriorityBinding>
                                        <Binding
                                          Converter="{StaticResource ZeroToVisibilityConverter}"
                                          FallbackValue="Collapsed"
                                          Path="Issues.Count" />
                                    </PriorityBinding>
                                </Border.Visibility>
                                <Path
                                  HorizontalAlignment="Right"
                                  Data="{StaticResource ExclamationCircledSVG}"
                                  Fill="{StaticResource ButtonForegroundBrush}"
                                  Stretch="Uniform" />
                                <Border.ToolTip>
                                    <ItemsControl ItemsSource="{Binding Issues}" />
                                </Border.ToolTip>
                            </Border>
                            <TextBlock Margin="0,3,0,0" VerticalAlignment="Center" Text="Index Variable:" />
                            <TextBox
                               MinWidth="40"
                               Margin="5,2,10,-2"
                               Text="{Binding IndexVariable}"
                               VerticalAlignment="Center"
                               TextAlignment="Center" />
                            <TextBlock Margin="0,3,0,0" VerticalAlignment="Center" Text="Value Variable:" />
                            <TextBox
                               MinWidth="40"
                               Margin="5,2,10,-2"
                               Text="{Binding ValueVariable}"
                               VerticalAlignment="Center"
                               TextAlignment="Center" />
                            <logic:ExprControl Label="Name:" Exp="{Binding NameExprExpression}" />
                        </StackPanel>
                        <Border Grid.Column="1" Background="{StaticResource SecondaryBackgroundBrush}">
                            <ContentPresenter
                             Margin="2,0,10,0"
                             HorizontalAlignment="Right"
                             Content="{Binding}"
                             DockPanel.Dock="Right"
                             Style="{StaticResource ProgressPresenter}" />
                        </Border>
                        <Border
                          x:Name="ButtonCommands"
                          Grid.Column="2"
                          HorizontalAlignment="Stretch"
                          Background="{StaticResource SecondaryBackgroundBrush}">
                            <Control Template="{StaticResource PowerupsButtons}" />
                        </Border>
                    </Grid>
                </ninactrl:DetachingExpander.Header>
                <StackPanel Grid.Row="1" Orientation="Vertical">
                    <Border
                     MinHeight="35"
                     Margin="0,0,0,0"
                     BorderBrush="{StaticResource BorderBrush}"
                     BorderThickness="1">
                        <Grid Background="{StaticResource BackgroundBrush}" >
                            <ItemsControl MinHeight="35" ItemsSource="{Binding Items}" />
                            <TextBlock
                             HorizontalAlignment="Center"
                             VerticalAlignment="Center"
                             FontStyle="Italic"
                             Opacity="0.4"
                             Text="Conditional instructions go here"
                             Visibility="{Binding Items.Count, Converter={StaticResource InverseZeroToVisibilityConverter}}" />
                            <i:Interaction.Behaviors>
                                <behaviors:DragOverBehavior DragAboveSize="0" DragBelowSize="0" />
                                <behaviors:DropIntoBehavior AllowedDragDropTypesString="NINA.Sequencer.Container.ISequenceContainer;NINA.Sequencer.SequenceItem.ISequenceItem;NINA.Sequencer.TemplatedSequenceContainer" OnDropCommand="DropIntoCommand" />
                            </i:Interaction.Behaviors>
                        </Grid>
                    </Border>
                </StackPanel>
            </ninactrl:DetachingExpander>
        </Border>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:ForEachList}">
        <Border>
            <Border.Resources>
                <wpfutil:SharedResourceDictionary Source="/NINA.Sequencer;component/Resources/Styles/ProgressStyle.xaml" />
            </Border.Resources>
            <i:Interaction.Behaviors>
                <!--  Drop area above and below the Sequence Container  -->
                <behaviors:DragOverBehavior
                AllowDragCenter="False"
                DragAboveSize="25"
                DragBelowSize="15" />
            </i:Interaction.Behaviors>
            <ninactrl:DetachingExpander>
                <ninactrl:DetachingExpander.Header>
                    <Grid
                    MinHeight="45"
                    Margin="0"
                    HorizontalAlignment="{Binding HorizontalAlignment, RelativeSource={RelativeSource AncestorType=ContentPresenter}, Mode=OneWayToSource}"
                    Background="{StaticResource SecondaryBackgroundBrush}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock 
                               MinHeight="25"
                               Margin="10,10,10,0"
                               Foreground="White"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               Text="For Each" />
                            <Border
                             Width="20"
                             Height="20"
                             Margin="5,0,5,0"
                             Background="{StaticResource NotificationErrorBrush}"
                             BorderBrush="Transparent"
                             CornerRadius="10">
                                <Border.Visibility>
                                    <PriorityBinding>
                                        <Binding
                                         Converter="{StaticResource ZeroToVisibilityConverter}"
                                         FallbackValue="Collapsed"
                                         Path="Issues.Count" />
                                    </PriorityBinding>
                                </Border.Visibility>
                                <Path
                                 HorizontalAlignment="Right"
                                 Data="{StaticResource ExclamationCircledSVG}"
                                 Fill="{StaticResource ButtonForegroundBrush}"
                                 Stretch="Uniform" />
                                <Border.ToolTip>
                                    <ItemsControl ItemsSource="{Binding Issues}" />
                                </Border.ToolTip>
                            </Border>
                            <TextBlock VerticalAlignment="Center" Text="Variable(s):" />
                            <TextBox
                              MinWidth="40"
                              Margin="5,2,10,-2"
                              Text="{Binding Variable}"
                              VerticalAlignment="Center"
                              TextAlignment="Center" />
                            <TextBlock VerticalAlignment="Center" Text="Expression(s):" />
                            <TextBox
                              MinWidth="40"
                              Margin="5,2,10,-2"
                              Text="{Binding ListExpression}"
                              VerticalAlignment="Center"
                              TextAlignment="Center" />
                        </StackPanel>
                        <Border Grid.Column="1" Background="{StaticResource SecondaryBackgroundBrush}">
                            <ContentPresenter
                            Margin="2,0,10,0"
                            HorizontalAlignment="Right"
                            Content="{Binding}"
                            DockPanel.Dock="Right"
                            Style="{StaticResource ProgressPresenter}" />
                        </Border>
                        <Border
                         x:Name="ButtonCommands"
                         Grid.Column="2"
                         HorizontalAlignment="Stretch"
                         Background="{StaticResource SecondaryBackgroundBrush}">
                            <Control Template="{StaticResource PowerupsButtons}" />
                        </Border>
                    </Grid>
                </ninactrl:DetachingExpander.Header>
                <StackPanel Grid.Row="1" Orientation="Vertical">
                    <Border
                    MinHeight="35"
                    Margin="0,0,0,0"
                    BorderBrush="{StaticResource BorderBrush}"
                    BorderThickness="1">
                        <Grid Background="{StaticResource BackgroundBrush}" >
                            <ItemsControl MinHeight="35" ItemsSource="{Binding Items}" />
                            <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontStyle="Italic"
                            Opacity="0.4"
                            Text="Conditional instructions go here"
                            Visibility="{Binding Items.Count, Converter={StaticResource InverseZeroToVisibilityConverter}}" />
                            <i:Interaction.Behaviors>
                                <behaviors:DragOverBehavior DragAboveSize="0" DragBelowSize="0" />
                                <behaviors:DropIntoBehavior AllowedDragDropTypesString="NINA.Sequencer.Container.ISequenceContainer;NINA.Sequencer.SequenceItem.ISequenceItem;NINA.Sequencer.TemplatedSequenceContainer" OnDropCommand="DropIntoCommand" />
                            </i:Interaction.Behaviors>
                        </Grid>
                    </Border>
                </StackPanel>
            </ninactrl:DetachingExpander>
        </Border>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:PutArray}">
        <nina:SequenceBlockView DataContext="{Binding}">
            <nina:SequenceBlockView.SequenceItemContent>
                <StackPanel Orientation="Horizontal">
                    <logic:ExprControl Label="Name:" Exp="{Binding NameExprExpression}" />
                    <logic:ExprControl Margin="8" Label="Index:" Exp="{Binding IExprExpression}" />
                    <logic:ExprControl Label="Value:" Exp="{Binding VExprExpression}"/>
                </StackPanel>
            </nina:SequenceBlockView.SequenceItemContent>
        </nina:SequenceBlockView>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:GetArray}">
        <nina:SequenceBlockView DataContext="{Binding}">
            <nina:SequenceBlockView.SequenceItemContent>
                <StackPanel Orientation="Horizontal">
                    <logic:ExprControl Label="Name:" Exp="{Binding NameExprExpression}" />
                    <logic:ExprControl Margin="8" Label="Index:" Exp="{Binding IExprExpression}" />
                    <logic:ExprControl Label="Variable:" Exp="{Binding VExprExpression}"/>
                </StackPanel>
            </nina:SequenceBlockView.SequenceItemContent>
        </nina:SequenceBlockView>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:InitializeArray}">
        <nina:SequenceBlockView DataContext="{Binding}">
            <nina:SequenceBlockView.SequenceItemContent>
                <StackPanel Orientation="Horizontal">
                    <logic:ExprControl Label="Name:" Exp="{Binding NameExprExpression}" />
                </StackPanel>
            </nina:SequenceBlockView.SequenceItemContent>
        </nina:SequenceBlockView>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:DIYTrigger}">
        <nina:SequenceBlockView DataContext="{Binding}">
            <nina:SequenceBlockView.SequenceItemContent>
                <ninactrl:DetachingExpander>
                    <ninactrl:DetachingExpander.Header>
                        <Border
                                MinHeight="35"
                                BorderBrush="{StaticResource BorderBrush}"
                                BorderThickness="1">
                            <Grid Background="{StaticResource BackgroundBrush}" DataContext="{Binding TriggerRunner}">
                                <ItemsControl MinHeight="35" ItemsSource="{Binding Triggers}" />
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    TextAlignment="Center"
                                    FontStyle="Italic"
                                    Opacity="0.4"
                                    Text="Trigger goes here"
                                    Visibility="{Binding Triggers.Count, Converter={StaticResource InverseZeroToVisibilityConverter}}"
                                    MinWidth="200"/>
                                <i:Interaction.Behaviors>
                                    <behaviors:DragOverBehavior DragAboveSize="0" DragBelowSize="0" />
                                </i:Interaction.Behaviors>
                            </Grid>
                            <i:Interaction.Behaviors>
                                <behaviors:DropIntoBehavior AllowedDragDropTypesString="NINA.Sequencer.Trigger.SequenceTrigger" OnDropCommand="DropIntoDIYTriggersCommand" />
                            </i:Interaction.Behaviors>
                        </Border>
                    </ninactrl:DetachingExpander.Header>
                    <StackPanel Orientation="Vertical">
                        <Border
                            MinHeight="35"
                            Margin="0,0,0,0"
                            BorderBrush="{StaticResource BorderBrush}"
                            BorderThickness="1">
                            <Grid Background="{StaticResource BackgroundBrush}" DataContext="{Binding TriggerRunner}">
                                <ItemsControl MinHeight="35" ItemsSource="{Binding Items}" />
                                <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontStyle="Italic"
                                Opacity="0.4"
                                Text="Instructions will go here..."
                                Visibility="{Binding Items.Count, Converter={StaticResource InverseZeroToVisibilityConverter}}" />
                                <i:Interaction.Behaviors>
                                    <behaviors:DragOverBehavior DragAboveSize="0" DragBelowSize="0" />
                                    <behaviors:DropIntoBehavior AllowedDragDropTypesString="NINA.Sequencer.Container.ISequenceContainer;NINA.Sequencer.SequenceItem.ISequenceItem;NINA.Sequencer.TemplatedSequenceContainer" OnDropCommand="DropIntoCommand" />
                                </i:Interaction.Behaviors>
                            </Grid>
                        </Border>
                    </StackPanel>
                </ninactrl:DetachingExpander>
            </nina:SequenceBlockView.SequenceItemContent>
        </nina:SequenceBlockView>
    </DataTemplate>

 
    <DataTemplate DataType="{x:Type local:SafeTrigger}">
        <nina:SequenceBlockView DataContext="{Binding}">
            <nina:SequenceBlockView.SequenceItemContent>
                <Border MinHeight="35"
                        BorderBrush="{StaticResource BorderBrush}"
                        BorderThickness="1">
                    <Grid Background="{StaticResource BackgroundBrush}" DataContext="{Binding TriggerRunner}">
                        <ItemsControl MinHeight="35" ItemsSource="{Binding Triggers}" />
                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            TextAlignment="Center"
                            FontStyle="Italic"
                            Opacity="0.4"
                            Text="Trigger goes here"
                            Visibility="{Binding Triggers.Count, Converter={StaticResource InverseZeroToVisibilityConverter}}"
                            MinWidth="200"/>
                        <i:Interaction.Behaviors>
                            <behaviors:DragOverBehavior DragAboveSize="0" DragBelowSize="0" />
                        </i:Interaction.Behaviors>
                    </Grid>
                    <i:Interaction.Behaviors>
                        <behaviors:DropIntoBehavior AllowedDragDropTypesString="NINA.Sequencer.Trigger.SequenceTrigger" OnDropCommand="SafeTriggerCommand" />
                    </i:Interaction.Behaviors>
                </Border>
            </nina:SequenceBlockView.SequenceItemContent>
        </nina:SequenceBlockView>
    </DataTemplate>

  
    <DataTemplate DataType="{x:Type local:InterruptTrigger}">
        <nina:SequenceBlockView DataContext="{Binding}">
            <nina:SequenceBlockView.SequenceItemContent>
                <ninactrl:DetachingExpander>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border
                        Grid.Row="1"
                        MinHeight="65"
                        BorderBrush="{StaticResource BorderBrush}"
                        BorderThickness="1">
                            <Grid Background="{StaticResource BackgroundBrush}" DataContext="{Binding Runner}">
                                <ItemsControl MinHeight="35" ItemsSource="{Binding Items}" />
                                <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontStyle="Italic"
                                Opacity="0.4"
                                Text="Instructions will go here..."
                                Visibility="{Binding Items.Count, Converter={StaticResource InverseZeroToVisibilityConverter}}" />
                                <i:Interaction.Behaviors>
                                    <behaviors:DragOverBehavior DragAboveSize="0" DragBelowSize="0" />
                                    <behaviors:DropIntoBehavior AllowedDragDropTypesString="NINA.Sequencer.Container.ISequenceContainer;NINA.Sequencer.TemplatedSequenceContainer;NINA.Sequencer.SequenceItem.ISequenceItem" OnDropCommand="DropIntoCommand" />
                                </i:Interaction.Behaviors>
                            </Grid>
                        </Border>
                    </Grid>
                </ninactrl:DetachingExpander>

            </nina:SequenceBlockView.SequenceItemContent>
        </nina:SequenceBlockView>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:ExternalScript}">
        <nina:SequenceBlockView>
            <nina:SequenceBlockView.SequenceItemContent>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock VerticalAlignment="Center" Text="{ns:Loc LblScript}" />
                    <TextBox
                      Grid.Column="1"
                      MinWidth="40"
                      Margin="5,0,0,0"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Center"
                      Text="{Binding Script}"
                      TextAlignment="Left"
                      ToolTip="{Binding ProcessedScriptAnnotated}"
                       />
                    <Button
                      Grid.Column="2"
                      Width="20"
                      Height="20"
                      Margin="5,0,0,0"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Command="{Binding OpenDialogCommand}"
                      Style="{StaticResource BackgroundButton}">
                        <Path
                          Margin="2,10,2,0"
                          Data="{StaticResource DotsSVG}"
                          Fill="{StaticResource ButtonForegroundBrush}"
                          Stretch="Uniform"
                          UseLayoutRounding="True" />
                    </Button>
                </Grid>
            </nina:SequenceBlockView.SequenceItemContent>
        </nina:SequenceBlockView>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:AddImagePattern}">
        <nina:SequenceBlockView DataContext="{Binding}">
            <nina:SequenceBlockView.SequenceItemContent>
                <StackPanel Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Text="Name:" />
                    <TextBox
                      MinWidth="40"
                      Margin="5,-1,10,-2"
                      Text="{Binding Identifier}"
                      VerticalAlignment="Center"
                      TextAlignment="Center" />
                    <logic:ExprControl Label="Value:" Exp="{Binding ExprExpression}"/>
                    <TextBlock Margin="20,-1,10,-2" VerticalAlignment="Center" Text="Description:" />
                    <TextBox
                      MinWidth="250"
                      Margin="5,-1,10,-2"
                      Text="{Binding PatternDescription}"
                      VerticalAlignment="Center"
                      TextAlignment="Left" />
                </StackPanel>
            </nina:SequenceBlockView.SequenceItemContent>
        </nina:SequenceBlockView>
    </DataTemplate>


    <DataTemplate DataType="{x:Type local:LogThis}">
        <nina:SequenceBlockView DataContext="{Binding}">
            <nina:SequenceBlockView.SequenceItemContent>
                <StackPanel Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Text="Text:" />
                    <TextBox
                        VerticalAlignment="Center"
                        MinWidth="400"
                        Margin="5,2,10,0"
                        Text="{Binding LogText}"
                        TextAlignment="Left" />
                    <Button
                       Width="25"
                       Height="25"
                       Margin="10,2,0,0"
                       HorizontalAlignment="Right"
                       VerticalAlignment="Center"
                       Command="{Binding SendInstruction}"
                       Style="{StaticResource SecondaryBackgroundButton}">
                        <Grid>
                            <Path
                               Margin="5"
                               Data="{StaticResource Pen_NoFill_SVG}"
                               Fill="{StaticResource ButtonForegroundBrush}"
                               Stretch="Uniform"
                               UseLayoutRounding="True" />
                        </Grid>
                        <Button.ToolTip>
                            <ToolTip>
                                <TextBlock Foreground="{StaticResource PrimaryBrush}" Text="Add the text to the NINA log" />
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                </StackPanel>
            </nina:SequenceBlockView.SequenceItemContent>
        </nina:SequenceBlockView>
    </DataTemplate>

 
 
    <!--<DataTemplate DataType="{x:Type local:RepeatUntilAllSucceed}">
        <nina:SequenceBlockView DataContext="{Binding}">
            <nina:SequenceBlockView.SequenceItemContent>
                <ninactrl:DetachingExpander>
                    <ninactrl:DetachingExpander.Header>
                        <StackPanel Orientation="Horizontal">
                            <local:ExprControl 
                                Label="Wait "
                                Exp="{Binding Path=WaitExpr, Mode=TwoWay}" />
                            <TextBlock VerticalAlignment="Center" Margin="0,-1,0,0" Text=" s before repeating " />
                        </StackPanel>
                    </ninactrl:DetachingExpander.Header>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border
                        Grid.Row="1"
                        MinHeight="35"
                        Margin="0,10,0,10"
                        BorderBrush="{StaticResource BorderBrush}"
                        BorderThickness="1">
                            <Grid Background="{StaticResource BackgroundBrush}" DataContext="{Binding Instructions}">
                                <ItemsControl MinHeight="35" ItemsSource="{Binding Items}" />
                                <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontStyle="Italic"
                                Opacity="0.4"
                                Text="Instructions go here"
                                Visibility="{Binding Items.Count, Converter={StaticResource InverseZeroToVisibilityConverter}}" />
                                <i:Interaction.Behaviors>
                                    <behaviors:DragOverBehavior DragAboveSize="0" DragBelowSize="0" />
                                    <behaviors:DropIntoBehavior AllowedDragDropTypesString="NINA.Sequencer.Container.ISequenceContainer;NINA.Sequencer.SequenceItem.ISequenceItem;NINA.Sequencer.TemplatedSequenceContainer" OnDropCommand="DropIntoCommand" />
                                </i:Interaction.Behaviors>
                            </Grid>
                        </Border>
                    </Grid>
                </ninactrl:DetachingExpander>

            </nina:SequenceBlockView.SequenceItemContent>
        </nina:SequenceBlockView>
    </DataTemplate>-->

    <DataTemplate DataType="{x:Type local:OnceSafe}">
        <Border>
            <Border.Resources>
                <wpfutil:SharedResourceDictionary Source="/NINA.Sequencer;component/Resources/Styles/ProgressStyle.xaml" />
            </Border.Resources>
            <i:Interaction.Behaviors>
                <!--  Drop area above and below the Sequence Container  -->
                <behaviors:DragOverBehavior
                    AllowDragCenter="False"
                    DragAboveSize="25"
                    DragBelowSize="15" />
            </i:Interaction.Behaviors>
            <ninactrl:DetachingExpander>
                <ninactrl:DetachingExpander.Header>
                    <Grid
                        MinHeight="35"
                        Margin="0"
                        HorizontalAlignment="{Binding HorizontalAlignment, RelativeSource={RelativeSource AncestorType=ContentPresenter}, Mode=OneWayToSource}"
                        Background="{StaticResource SecondaryBackgroundBrush}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock 
                                 MinHeight="25"
                                 Foreground="White"
                                 Margin="10,10,10,0"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 Text="Once Safe" />
                            </StackPanel>
                        </Grid>
                        <Border Grid.Column="1" Background="{StaticResource SecondaryBackgroundBrush}">
                            <ContentPresenter
                                Margin="2,0,10,0"
                                HorizontalAlignment="Right"
                                Content="{Binding}"
                                DockPanel.Dock="Right"
                                Style="{StaticResource ProgressPresenter}" />
                        </Border>
                        <Border
                           x:Name="ButtonCommands"
                           Grid.Column="2"
                           HorizontalAlignment="Stretch"
                           Background="{StaticResource SecondaryBackgroundBrush}">
                            <Control Template="{StaticResource PowerupsButtons}" />
                        </Border>
                    </Grid>
                </ninactrl:DetachingExpander.Header>
                <StackPanel Grid.Row="1" Orientation="Vertical">
                    <Border
                        MinHeight="35"
                        Margin="0,0,0,0"
                        BorderBrush="{StaticResource BorderBrush}"
                        BorderThickness="1">
                        <Grid Background="{StaticResource BackgroundBrush}" DataContext="{Binding Instructions}">
                            <ItemsControl MinHeight="35" ItemsSource="{Binding Items}" />
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontStyle="Italic"
                                Opacity="0.4"
                                Text="The specified template will go here..."
                                Visibility="{Binding Items.Count, Converter={StaticResource InverseZeroToVisibilityConverter}}" />
                            <i:Interaction.Behaviors>
                                <behaviors:DragOverBehavior DragAboveSize="0" DragBelowSize="0" />
                                <behaviors:DropIntoBehavior AllowedDragDropTypesString="NINA.Sequencer.Container.ISequenceContainer;NINA.Sequencer.SequenceItem.ISequenceItem;NINA.Sequencer.TemplatedSequenceContainer" OnDropCommand="DropIntoCommand" />
                            </i:Interaction.Behaviors>
                        </Grid>
                    </Border>
                </StackPanel>
            </ninactrl:DetachingExpander>
        </Border>
    </DataTemplate>

     <DataTemplate DataType="{x:Type local:IfFailed}">
        <Border>
            <Border.Resources>
                <wpfutil:SharedResourceDictionary Source="/NINA.Sequencer;component/Resources/Styles/ProgressStyle.xaml" />
            </Border.Resources>
            <i:Interaction.Behaviors>
                <!--  Drop area above and below the Sequence Container  -->
                <behaviors:DragOverBehavior
                 AllowDragCenter="False"
                 DragAboveSize="25"
                 DragBelowSize="15" />
            </i:Interaction.Behaviors>
            <ninactrl:DetachingExpander>
                <ninactrl:DetachingExpander.Header>
                    <Grid
                     MinHeight="35"
                     Margin="0"
                     HorizontalAlignment="{Binding HorizontalAlignment, RelativeSource={RelativeSource AncestorType=ContentPresenter}, Mode=OneWayToSource}"
                     Background="{StaticResource SecondaryBackgroundBrush}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock 
                                MinHeight="25"
                                Margin="10,10,10,0"
                                Foreground="White"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Text="If Failed: " />

                            <Border
                              Width="20"
                              Height="20"
                              Margin="5,0,5,0"
                              Background="{StaticResource NotificationErrorBrush}"
                              BorderBrush="Transparent"
                              CornerRadius="10">
                                <Border.Visibility>
                                    <PriorityBinding>
                                        <Binding
                                          Converter="{StaticResource ZeroToVisibilityConverter}"
                                          FallbackValue="Collapsed"
                                          Path="Issues.Count" />
                                    </PriorityBinding>
                                </Border.Visibility>
                                <Path
                                  HorizontalAlignment="Right"
                                  Data="{StaticResource ExclamationCircledSVG}"
                                  Fill="{StaticResource ButtonForegroundBrush}"
                                  Stretch="Uniform" />
                                <Border.ToolTip>
                                    <ItemsControl ItemsSource="{Binding Issues}" />
                                </Border.ToolTip>
                            </Border>

                            <Border
                               MinHeight="35"
                               Margin="8,1,0,0"
                               BorderBrush="{StaticResource BorderBrush}"
                               BorderThickness="1">
                                <Grid Background="{StaticResource BackgroundBrush}" DataContext="{Binding Condition}">
                                    <ItemsControl MinHeight="35" ItemsSource="{Binding Items}" />
                                    <TextBlock
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontStyle="Italic"
                                       Text="Instruction to check goes here"
                                       TextAlignment="Center"
                                       MinWidth="400"
                                       Visibility="{Binding Items.Count, Converter={StaticResource InverseZeroToVisibilityConverter}}" />
                                    <i:Interaction.Behaviors>
                                        <behaviors:DragOverBehavior DragAboveSize="0" DragBelowSize="0" />
                                    </i:Interaction.Behaviors>
                                </Grid>
                                <i:Interaction.Behaviors>
                                    <behaviors:DropIntoBehavior AllowedDragDropTypesString="NINA.Sequencer.SequenceItem.ISequenceItem" OnDropCommand="DropIntoIfCommand" />
                                </i:Interaction.Behaviors>
                            </Border>
                        </StackPanel>
                        <Border Grid.Column="1" Background="{StaticResource SecondaryBackgroundBrush}">
                            <ContentPresenter
                             Margin="2,0,10,0"
                             HorizontalAlignment="Right"
                             Content="{Binding}"
                             DockPanel.Dock="Right"
                             Style="{StaticResource ProgressPresenter}" />
                        </Border>
                        <Border
                          x:Name="ButtonCommands"
                          Grid.Column="2"
                          HorizontalAlignment="Stretch"
                          Background="{StaticResource SecondaryBackgroundBrush}">
                            <Control Template="{StaticResource PowerupsButtons}" />
                        </Border>
                    </Grid>
                </ninactrl:DetachingExpander.Header>
                <StackPanel Grid.Row="1" Orientation="Vertical">
                    <Border
                     MinHeight="35"
                     Margin="0,0,0,0"
                     BorderBrush="{StaticResource BorderBrush}"
                     BorderThickness="1">
                        <Grid Background="{StaticResource BackgroundBrush}" DataContext="{Binding Instructions}">
                            <ItemsControl MinHeight="35" ItemsSource="{Binding Items}" />
                            <TextBlock
                             HorizontalAlignment="Center"
                             VerticalAlignment="Center"
                             FontStyle="Italic"
                             Opacity="0.4"
                             Text="Conditional instructions go here"
                             Visibility="{Binding Items.Count, Converter={StaticResource InverseZeroToVisibilityConverter}}" />
                            <i:Interaction.Behaviors>
                                <behaviors:DragOverBehavior DragAboveSize="0" DragBelowSize="0" />
                                <behaviors:DropIntoBehavior AllowedDragDropTypesString="NINA.Sequencer.Container.ISequenceContainer;NINA.Sequencer.SequenceItem.ISequenceItem;NINA.Sequencer.TemplatedSequenceContainer" OnDropCommand="DropIntoCommand" />
                            </i:Interaction.Behaviors>
                        </Grid>
                    </Border>
                </StackPanel>
            </ninactrl:DetachingExpander>
        </Border>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:IfConstant}">
        <Border>
            <Border.Resources>
                <wpfutil:SharedResourceDictionary Source="/NINA.Sequencer;component/Resources/Styles/ProgressStyle.xaml" />
            </Border.Resources>
            <i:Interaction.Behaviors>
                <!--  Drop area above and below the Sequence Container  -->
                <behaviors:DragOverBehavior
                 AllowDragCenter="False"
                 DragAboveSize="25"
                 DragBelowSize="15" />
            </i:Interaction.Behaviors>
            <ninactrl:DetachingExpander>
                <ninactrl:DetachingExpander.Header>
                    <Grid
                     MinHeight="35"
                     Margin="0"
                     HorizontalAlignment="{Binding HorizontalAlignment, RelativeSource={RelativeSource AncestorType=ContentPresenter}, Mode=OneWayToSource}"
                     Background="{StaticResource SecondaryBackgroundBrush}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock 
                                MinHeight="25"
                                Margin="10,10,10,0"
                                Foreground="White"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Text="If" />
                            <Border
                              Width="20"
                              Height="20"
                              Margin="5,0,5,0"
                              Background="{StaticResource NotificationErrorBrush}"
                              BorderBrush="Transparent"
                              CornerRadius="10">
                                <Border.Visibility>
                                    <PriorityBinding>
                                        <Binding
                                          Converter="{StaticResource ZeroToVisibilityConverter}"
                                          FallbackValue="Collapsed"
                                          Path="Issues.Count" />
                                    </PriorityBinding>
                                </Border.Visibility>
                                <Path
                                  HorizontalAlignment="Right"
                                  Data="{StaticResource ExclamationCircledSVG}"
                                  Fill="{StaticResource ButtonForegroundBrush}"
                                  Stretch="Uniform" />
                                <Border.ToolTip>
                                    <ItemsControl ItemsSource="{Binding Issues}" />
                                </Border.ToolTip>
                            </Border>

                            <logic:ExprControl Label="Expression:" Exp="{Binding PredicateExpression, Mode=TwoWay}"/>
                        </StackPanel>
                        <Border Grid.Column="1" Background="{StaticResource SecondaryBackgroundBrush}">
                            <ContentPresenter
                             Margin="2,0,10,0"
                             HorizontalAlignment="Right"
                             Content="{Binding}"
                             DockPanel.Dock="Right"
                             Style="{StaticResource ProgressPresenter}" />
                        </Border>
                        <Border
                          x:Name="ButtonCommands"
                          Grid.Column="2"
                          HorizontalAlignment="Stretch"
                          Background="{StaticResource SecondaryBackgroundBrush}">
                            <Control Template="{StaticResource PowerupsButtons}" />
                        </Border>
                    </Grid>
                </ninactrl:DetachingExpander.Header>
                <StackPanel Grid.Row="1" Orientation="Vertical">
                    <Border
                     MinHeight="35"
                     Margin="0,0,0,0"
                     BorderBrush="{StaticResource BorderBrush}"
                     BorderThickness="1">
                        <Grid Background="{StaticResource BackgroundBrush}" DataContext="{Binding Instructions}">
                            <ItemsControl MinHeight="35" ItemsSource="{Binding Items}" />
                            <TextBlock
                             HorizontalAlignment="Center"
                             VerticalAlignment="Center"
                             FontStyle="Italic"
                             Opacity="0.4" 
                             Text="Conditional instructions go here"
                             Visibility="{Binding Items.Count, Converter={StaticResource InverseZeroToVisibilityConverter}}" />
                            <i:Interaction.Behaviors>
                                <behaviors:DragOverBehavior DragAboveSize="0" DragBelowSize="0" />
                                <behaviors:DropIntoBehavior AllowedDragDropTypesString="NINA.Sequencer.Container.ISequenceContainer;NINA.Sequencer.SequenceItem.ISequenceItem;NINA.Sequencer.TemplatedSequenceContainer" OnDropCommand="DropIntoCommand" />
                            </i:Interaction.Behaviors>
                        </Grid>
                    </Border>
                </StackPanel>
            </ninactrl:DetachingExpander>
        </Border>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:IfThenElse}">
        <Border>
            <Border.Resources>
                <wpfutil:SharedResourceDictionary Source="/NINA.Sequencer;component/Resources/Styles/ProgressStyle.xaml" />
            </Border.Resources>
            <i:Interaction.Behaviors>
                <!--  Drop area above and below the Sequence Container  -->
                <behaviors:DragOverBehavior
                  AllowDragCenter="False"
                  DragAboveSize="25"
                  DragBelowSize="15" />
            </i:Interaction.Behaviors>
            <ninactrl:DetachingExpander>
                <ninactrl:DetachingExpander.Header>
                    <Grid
                      MinHeight="35"
                      Margin="0"
                      HorizontalAlignment="{Binding HorizontalAlignment, RelativeSource={RelativeSource AncestorType=ContentPresenter}, Mode=OneWayToSource}"
                      Background="{StaticResource SecondaryBackgroundBrush}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock 
                                 MinHeight="25"
                                 Foreground="White"
                                 Margin="10,10,10,0"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 Text="If/Then/Else" />
                            <Border
                               Width="20"
                               Height="20"
                               Margin="5,0,5,0"
                               Background="{StaticResource NotificationErrorBrush}"
                               BorderBrush="Transparent"
                               CornerRadius="10">
                                <Border.Visibility>
                                    <PriorityBinding>
                                        <Binding
                                           Converter="{StaticResource ZeroToVisibilityConverter}"
                                           FallbackValue="Collapsed"
                                           Path="Issues.Count" />
                                    </PriorityBinding>
                                </Border.Visibility>
                                <Path
                                   HorizontalAlignment="Right"
                                   Data="{StaticResource ExclamationCircledSVG}"
                                   Fill="{StaticResource ButtonForegroundBrush}"
                                   Stretch="Uniform" />
                                <Border.ToolTip>
                                    <ItemsControl ItemsSource="{Binding Issues}" />
                                </Border.ToolTip>
                            </Border>
                            <logic:ExprControl Label="Expression:" Exp="{Binding Path=PredicateExpression, Mode=TwoWay}" />
                        </StackPanel>
                        <Border Grid.Column="1" Background="{StaticResource SecondaryBackgroundBrush}">
                            <ContentPresenter
                              Margin="2,0,10,0"
                              HorizontalAlignment="Right"
                              Content="{Binding}"
                              DockPanel.Dock="Right"
                              Style="{StaticResource ProgressPresenter}" />
                        </Border>
                        <Border
                           x:Name="ButtonCommands"
                           Grid.Column="2"
                           HorizontalAlignment="Stretch"
                           Background="{StaticResource SecondaryBackgroundBrush}">
                            <Control Template="{StaticResource PowerupsButtons}" />
                        </Border>
                    </Grid>
                </ninactrl:DetachingExpander.Header>
                <StackPanel Grid.Row="1" Orientation="Vertical">
                    <Border
                      MinHeight="35"
                      Margin="0,0,0,0"
                      BorderBrush="{StaticResource BorderBrush}"
                      BorderThickness="1">
                        <Grid Background="{StaticResource BackgroundBrush}" DataContext="{Binding Instructions}">
                            <ItemsControl MinHeight="35" ItemsSource="{Binding Items}" />
                            <TextBlock
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              FontStyle="Italic"
                              Opacity="0.4"
                              Text="Then instructions go here"
                              Visibility="{Binding Items.Count, Converter={StaticResource InverseZeroToVisibilityConverter}}" />
                            <i:Interaction.Behaviors>
                                <behaviors:DragOverBehavior DragAboveSize="0" DragBelowSize="0" />
                                <behaviors:DropIntoBehavior AllowedDragDropTypesString="NINA.Sequencer.Container.ISequenceContainer;NINA.Sequencer.SequenceItem.ISequenceItem;NINA.Sequencer.TemplatedSequenceContainer" OnDropCommand="DropIntoCommand" />
                            </i:Interaction.Behaviors>
                        </Grid>
                    </Border>
                    <TextBlock Text="Else" Margin="10,10,0,0" MinHeight="35" VerticalAlignment="Bottom" />
                    <Border
                      MinHeight="35"
                      Margin="0,-10,0,0"
                      BorderBrush="{StaticResource BorderBrush}"
                      BorderThickness="1">
                        <Grid Background="{StaticResource BackgroundBrush}" DataContext="{Binding ElseInstructions}">
                            <ItemsControl MinHeight="35" ItemsSource="{Binding Items}" />
                            <TextBlock
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              FontStyle="Italic"
                              Opacity="0.4"
                              Text="Else instructions go here"
                              Visibility="{Binding Items.Count, Converter={StaticResource InverseZeroToVisibilityConverter}}" />
                            <i:Interaction.Behaviors>
                                <behaviors:DragOverBehavior DragAboveSize="0" DragBelowSize="0" />
                                <behaviors:DropIntoBehavior AllowedDragDropTypesString="NINA.Sequencer.Container.ISequenceContainer;NINA.Sequencer.SequenceItem.ISequenceItem;NINA.Sequencer.TemplatedSequenceContainer" OnDropCommand="DropIntoCommand" />
                            </i:Interaction.Behaviors>
                        </Grid>
                    </Border>
                </StackPanel>
            </ninactrl:DetachingExpander>
        </Border>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:IfTimeout}">
        <Border>
            <Border.Resources>
                <wpfutil:SharedResourceDictionary Source="/NINA.Sequencer;component/Resources/Styles/ProgressStyle.xaml" />
            </Border.Resources>
            <i:Interaction.Behaviors>
                <!--  Drop area above and below the Sequence Container  -->
                <behaviors:DragOverBehavior
                 AllowDragCenter="False"
                 DragAboveSize="25"
                 DragBelowSize="15" />
            </i:Interaction.Behaviors>
            <ninactrl:DetachingExpander>
                <ninactrl:DetachingExpander.Header>
                    <Grid
                     MinHeight="35"
                     Margin="0"
                     HorizontalAlignment="{Binding HorizontalAlignment, RelativeSource={RelativeSource AncestorType=ContentPresenter}, Mode=OneWayToSource}"
                     Background="{StaticResource SecondaryBackgroundBrush}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock 
                                MinHeight="25"
                                Margin="10,10,10,0"
                                Foreground="White"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Text="If Timed Out  @" />

                            <Border
                              Width="20"
                              Height="20"
                              Margin="5,0,5,0"
                              Background="{StaticResource NotificationErrorBrush}"
                              BorderBrush="Transparent"
                              CornerRadius="10">
                                <Border.Visibility>
                                    <PriorityBinding>
                                        <Binding
                                          Converter="{StaticResource ZeroToVisibilityConverter}"
                                          FallbackValue="Collapsed"
                                          Path="Issues.Count" />
                                    </PriorityBinding>
                                </Border.Visibility>
                                <Path
                                  HorizontalAlignment="Right"
                                  Data="{StaticResource ExclamationCircledSVG}"
                                  Fill="{StaticResource ButtonForegroundBrush}"
                                  Stretch="Uniform" />
                                <Border.ToolTip>
                                    <ItemsControl ItemsSource="{Binding Issues}" />
                                </Border.ToolTip>
                            </Border>
                            <TextBox Margin="0,2,0,0" VerticalAlignment="Center" Text="{Binding Time}" />
                            <TextBlock VerticalAlignment="Center" Text=" s" />

                            <Border
                               MinHeight="35"
                               Margin="8,1,0,0"
                               BorderBrush="{StaticResource BorderBrush}"
                               BorderThickness="1">
                                <Grid Background="{StaticResource BackgroundBrush}" DataContext="{Binding Condition}">
                                    <ItemsControl MinHeight="35" ItemsSource="{Binding Items}" />
                                    <TextBlock
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontStyle="Italic"
                                       Text="Instruction or template to check goes here"
                                       TextAlignment="Center"
                                       MinWidth="400"
                                       Visibility="{Binding Items.Count, Converter={StaticResource InverseZeroToVisibilityConverter}}" />
                                    <i:Interaction.Behaviors>
                                        <behaviors:DragOverBehavior DragAboveSize="0" DragBelowSize="0" />
                                    </i:Interaction.Behaviors>
                                </Grid>
                                <i:Interaction.Behaviors>
                                    <behaviors:DropIntoBehavior AllowedDragDropTypesString="NINA.Sequencer.Container.ISequenceContainer;NINA.Sequencer.SequenceItem.ISequenceItem;NINA.Sequencer.TemplatedSequenceContainer" OnDropCommand="DropIntoIfCommand" />
                                </i:Interaction.Behaviors>
                            </Border>
                        </StackPanel>
                        <Border Grid.Column="1" Background="{StaticResource SecondaryBackgroundBrush}">
                            <ContentPresenter
                             Margin="2,0,10,0"
                             HorizontalAlignment="Right"
                             Content="{Binding}"
                             DockPanel.Dock="Right"
                             Style="{StaticResource ProgressPresenter}" />
                        </Border>
                        <Border
                          x:Name="ButtonCommands"
                          Grid.Column="2"
                          HorizontalAlignment="Stretch"
                          Background="{StaticResource SecondaryBackgroundBrush}">
                            <Control Template="{StaticResource PowerupsButtons}" />
                        </Border>
                    </Grid>
                </ninactrl:DetachingExpander.Header>
                <StackPanel Grid.Row="1" Orientation="Vertical">
                    <Border
                     MinHeight="35"
                     Margin="0,0,0,0"
                     BorderBrush="{StaticResource BorderBrush}"
                     BorderThickness="1">
                        <Grid Background="{StaticResource BackgroundBrush}" DataContext="{Binding Instructions}">
                            <ItemsControl MinHeight="35" ItemsSource="{Binding Items}" />
                            <TextBlock
                             HorizontalAlignment="Center"
                             VerticalAlignment="Center"
                             FontStyle="Italic"
                             Opacity="0.4"
                             Text="Conditional instructions go here"
                             Visibility="{Binding Items.Count, Converter={StaticResource InverseZeroToVisibilityConverter}}" />
                            <i:Interaction.Behaviors>
                                <behaviors:DragOverBehavior DragAboveSize="0" DragBelowSize="0" />
                                <behaviors:DropIntoBehavior AllowedDragDropTypesString="NINA.Sequencer.Container.ISequenceContainer;NINA.Sequencer.SequenceItem.ISequenceItem;NINA.Sequencer.TemplatedSequenceContainer" OnDropCommand="DropIntoCommand" />
                            </i:Interaction.Behaviors>
                        </Grid>
                    </Border>
                </StackPanel>
            </ninactrl:DetachingExpander>
        </Border>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:WhenUnsafe}">
        <Border>
            <Border.Resources>
                <wpfutil:SharedResourceDictionary Source="/NINA.Sequencer;component/Resources/Styles/ProgressStyle.xaml" />
            </Border.Resources>
            <i:Interaction.Behaviors>
                <!--  Drop area above and below the Sequence Container  -->
                <behaviors:DragOverBehavior
                   AllowDragCenter="False"
                   DragAboveSize="25"
                   DragBelowSize="15" />
            </i:Interaction.Behaviors>
            <ninactrl:DetachingExpander>
                <ninactrl:DetachingExpander.Header>
                    <Grid
                       MinHeight="35"
                       Margin="0"
                       HorizontalAlignment="{Binding HorizontalAlignment, RelativeSource={RelativeSource AncestorType=ContentPresenter}, Mode=OneWayToSource}"
                       Background="{StaticResource SecondaryBackgroundBrush}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock 
                                    MinHeight="25"
                                    Margin="10,10,10,0"
                                    Foreground="White"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Text="When Becomes Unsafe" />
                                <Border
                                    Width="20"
                                    Height="20"
                                    Margin="5,0,5,0"
                                    Background="{StaticResource NotificationErrorBrush}"
                                    BorderBrush="Transparent"
                                    CornerRadius="10">
                                    <Border.Visibility>
                                        <PriorityBinding>
                                            <Binding
                                            Converter="{StaticResource ZeroToVisibilityConverter}"
                                            FallbackValue="Collapsed"
                                            Path="Issues.Count" />
                                        </PriorityBinding>
                                    </Border.Visibility>
                                    <Path
                                    HorizontalAlignment="Right"
                                    Data="{StaticResource ExclamationCircledSVG}"
                                    Fill="{StaticResource ButtonForegroundBrush}"
                                    Stretch="Uniform" />
                                    <Border.ToolTip>
                                        <ItemsControl ItemsSource="{Binding Issues}" />
                                    </Border.ToolTip>
                                </Border>
                            </StackPanel>
                        <Border Grid.Column="1" Background="{StaticResource SecondaryBackgroundBrush}">
                            <ContentPresenter
                               Margin="2,0,10,0"
                               HorizontalAlignment="Right"
                               Content="{Binding}"
                               DockPanel.Dock="Right"
                               Style="{StaticResource ProgressPresenter}" />
                        </Border>
                        <Border
                            x:Name="ButtonCommands"
                            Grid.Column="2"
                            HorizontalAlignment="Stretch"
                            Background="{StaticResource SecondaryBackgroundBrush}">
                            <Control Template="{StaticResource PowerupsButtons}" />
                        </Border>
                    </Grid>
                </ninactrl:DetachingExpander.Header>
                <StackPanel Grid.Row="1" Orientation="Vertical">
                    <Border
                       MinHeight="35"
                       Margin="0,0,0,0"
                       BorderBrush="{StaticResource BorderBrush}"
                       BorderThickness="1">
                        <Grid Background="{StaticResource BackgroundBrush}" DataContext="{Binding Instructions}">
                            <ItemsControl MinHeight="35" ItemsSource="{Binding Items}" />
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontStyle="Italic"
                                Opacity="0.4"
                                Text="Instructions will go here..."
                               Visibility="{Binding Items.Count, Converter={StaticResource InverseZeroToVisibilityConverter}}" />
                            <i:Interaction.Behaviors>
                                <behaviors:DragOverBehavior DragAboveSize="0" DragBelowSize="0" />
                                <behaviors:DropIntoBehavior AllowedDragDropTypesString="NINA.Sequencer.Container.ISequenceContainer;NINA.Sequencer.SequenceItem.ISequenceItem;NINA.Sequencer.TemplatedSequenceContainer" OnDropCommand="DropIntoCommand" />
                            </i:Interaction.Behaviors>
                        </Grid>
                    </Border>
                </StackPanel>
            </ninactrl:DetachingExpander>
        </Border>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:GSSend}">
        <Border>
            <Border.Resources>
                <wpfutil:SharedResourceDictionary Source="/NINA.Sequencer;component/Resources/Styles/ProgressStyle.xaml" />
            </Border.Resources>
            <i:Interaction.Behaviors>
                <!--  Drop area above and below the Sequence Container  -->
                <behaviors:DragOverBehavior
                AllowDragCenter="False"
                DragAboveSize="25"
                DragBelowSize="15" />
            </i:Interaction.Behaviors>
            <ninactrl:DetachingExpander>
                <ninactrl:DetachingExpander.Header>
                    <Grid
                    MinHeight="35"
                    Margin="0"
                    HorizontalAlignment="{Binding HorizontalAlignment, RelativeSource={RelativeSource AncestorType=ContentPresenter}, Mode=OneWayToSource}"
                    Background="{StaticResource SecondaryBackgroundBrush}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock 
                               MinHeight="25"
                               Margin="10,10,10,0"
                               Foreground="White"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               Text="Send via Ground Station (expand the instruction and add the Ground Station instruction below)" />

                            <Border
                             Width="20"
                             Height="20"
                             Margin="5,0,5,0"
                             Background="{StaticResource NotificationErrorBrush}"
                             BorderBrush="Transparent"
                             CornerRadius="10">
                                <Border.Visibility>
                                    <PriorityBinding>
                                        <Binding
                                         Converter="{StaticResource ZeroToVisibilityConverter}"
                                         FallbackValue="Collapsed"
                                         Path="Issues.Count" />
                                    </PriorityBinding>
                                </Border.Visibility>
                                <Path
                                 HorizontalAlignment="Right"
                                 Data="{StaticResource ExclamationCircledSVG}"
                                 Fill="{StaticResource ButtonForegroundBrush}"
                                 Stretch="Uniform" />
                                <Border.ToolTip>
                                    <ItemsControl ItemsSource="{Binding Issues}" />
                                </Border.ToolTip>
                            </Border>

                        </StackPanel>
                        <Border Grid.Column="1" Background="{StaticResource SecondaryBackgroundBrush}">
                            <ContentPresenter
                            Margin="2,0,10,0"
                            HorizontalAlignment="Right"
                            Content="{Binding}"
                            DockPanel.Dock="Right"
                            Style="{StaticResource ProgressPresenter}" />
                        </Border>
                        <Border
                         x:Name="ButtonCommands"
                         Grid.Column="2"
                         HorizontalAlignment="Stretch"
                         Background="{StaticResource SecondaryBackgroundBrush}">
                            <Control Template="{StaticResource PowerupsButtons}" />
                        </Border>
                    </Grid>
                </ninactrl:DetachingExpander.Header>
                <Border
                   MinHeight="35"
                   Margin="8,1,0,0"
                   BorderBrush="{StaticResource BorderBrush}"
                   BorderThickness="1">
                    <Grid Background="{StaticResource BackgroundBrush}" DataContext="{Binding Condition}">
                        <ItemsControl MinHeight="35" ItemsSource="{Binding Items}" />
                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontStyle="Italic"
                            Text="Ground station instruction goes here"
                            TextAlignment="Center"
                            MinWidth="400"
                            Visibility="{Binding Items.Count, Converter={StaticResource InverseZeroToVisibilityConverter}}" />
                    </Grid>
                    <i:Interaction.Behaviors>
                        <behaviors:DragOverBehavior DragAboveSize="0" DragBelowSize="0" />
                        <behaviors:DropIntoBehavior AllowedDragDropTypesString="NINA.Sequencer.SequenceItem.ISequenceItem" OnDropCommand="DropIntoIfCommand" />
                    </i:Interaction.Behaviors>
                </Border>
            </ninactrl:DetachingExpander>
        </Border>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:WaitIndefinitely}">
        <nina:SequenceBlockView DataContext="{Binding}">
            <nina:SequenceBlockView.SequenceItemContent>
                <StackPanel Orientation="Horizontal">
                    <TextBlock
                        MinHeight="20"
                        HorizontalAlignment="Left"
                        Margin="0,0,0,-20"
                        Visibility="{Binding InFlight, Converter={StaticResource BooleanToVisibilityHiddenConverter}}"
                        VerticalAlignment="Top"
                        Opacity="0.4"
                        MinWidth="200"
                        Text="Click this button to terminate the wait:" />
                    <Button
                        MinHeight="20"
                        Margin="5,-2,0,0"
                        Width="100"
                        VerticalAlignment="Top"
                        HorizontalAlignment="Stretch"
                        Visibility="{Binding InFlight, Converter={StaticResource BooleanToVisibilityHiddenConverter}}"
                        Command="{Binding StopInstructions}">
                        <TextBlock
                            Foreground="{StaticResource ButtonForegroundBrush}"
                            Text="Stop"
                            TextWrapping="Wrap" />
                    </Button>
                </StackPanel>
            </nina:SequenceBlockView.SequenceItemContent>
        </nina:SequenceBlockView>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:EndInstructionSet}">
        <nina:SequenceBlockView DataContext="{Binding}">
            <nina:SequenceBlockView.SequenceItemContent>
                <StackPanel Orientation="Horizontal">
                    <TextBlock
                       MinHeight="20"
                       HorizontalAlignment="Left"
                       Margin="0,0,0,0"
                       VerticalAlignment="Center"
                       Text="Name:" />
                    <ComboBox
                       Margin="10,-2,0,0"
                       ItemsSource="{Binding InstructionSetNames}"
                       SelectedItem="{Binding InstructionSetName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>
            </nina:SequenceBlockView.SequenceItemContent>
        </nina:SequenceBlockView>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:Break}">
        <nina:SequenceBlockView DataContext="{Binding}">
            <nina:SequenceBlockView.SequenceItemContent>
                <StackPanel Orientation="Horizontal">
                    <TextBlock 
                       Text="Reason: " 
                       VerticalAlignment="Center"
                       Visibility="{Binding NotInFlight, Converter={StaticResource BooleanToVisibilityHiddenConverter}}"
                       Margin="0,-4,0,0"
                        />
                    <TextBox
                       MinHeight="25"
                       HorizontalAlignment="Left"
                       Margin="5,2,0,0"
                       Visibility="{Binding NotInFlight, Converter={StaticResource BooleanToVisibilityHiddenConverter}}"
                       VerticalAlignment="Center"
                       MinWidth="250"
                       ToolTip="Enter text that will appear in the Breakpoint notification (not required)"
                       Text="{Binding Reason}" />
                    <TextBlock
                        MinHeight="20"
                        HorizontalAlignment="Left"
                        Margin="0,0,0,-20"
                        Visibility="{Binding InFlight, Converter={StaticResource BooleanToVisibilityHiddenConverter}}"
                        VerticalAlignment="Top"
                        Opacity="0.9"
                        MinWidth="250"
                        ToolTip="[See variables and constants here]"
                        Text="Click this button to continue the sequence:" />
                    <Button
                        MinHeight="20"
                        Margin="5,-2,0,0"
                        Width="150"
                        VerticalAlignment="Top"
                        HorizontalAlignment="Stretch"
                        Visibility="{Binding InFlight, Converter={StaticResource BooleanToVisibilityHiddenConverter}}"
                        Command="{Binding StopInstructions}">
                        <TextBlock
                            Foreground="{StaticResource ButtonForegroundBrush}"
                            Margin="0,-2,0,0"
                            Text="Continue"
                            TextWrapping="Wrap" />
                    </Button>
                </StackPanel>
            </nina:SequenceBlockView.SequenceItemContent>
        </nina:SequenceBlockView>
    </DataTemplate>

    <DataTemplate x:Key="NINA.Plugins.Generics.Instructions.GenericTrigger_Mini">
        <mini:MiniSequenceItem>
            <mini:MiniSequenceItem.SequenceItemContent>
                <TextBlock />
            </mini:MiniSequenceItem.SequenceItemContent>
        </mini:MiniSequenceItem>
    </DataTemplate>

  
    <DataTemplate x:Key="PowerupsLite.When.WhenUnsafe_Mini" DataType="{x:Type local:WhenUnsafe}">
        <mini:MiniContainer DataContext="{Binding Instructions}">
            <mini:MiniContainer.Content>
                <Grid Background="{StaticResource BackgroundBrush}" DataContext="{Binding Instructions}">
                    <ItemsControl MinHeight="35" ItemsSource="{Binding Items}" />
                </Grid>
            </mini:MiniContainer.Content>
        </mini:MiniContainer>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:PassMeridian}">
        <nina:SequenceBlockView DataContext="{Binding}">
            <nina:SequenceBlockView.SequenceItemContent>
                <StackPanel Orientation="Horizontal">
                    <TextBlock
                        Margin="0,0,0,0"
                        VerticalAlignment="Center"
                        Text="{Binding FlipStatus}" />
                </StackPanel>
            </nina:SequenceBlockView.SequenceItemContent>
        </nina:SequenceBlockView>
    </DataTemplate>


    <DataTemplate DataType="{x:Type local:DoFlip}">
        <nina:SequenceBlockView DataContext="{Binding}">
            <nina:SequenceBlockView.SequenceItemContent>
                <StackPanel Orientation="Horizontal">
                    <TextBlock
                        Margin="0,0,0,0"
                        VerticalAlignment="Center"
                        Text="{Binding FlipStatus}" />
                </StackPanel>
            </nina:SequenceBlockView.SequenceItemContent>
        </nina:SequenceBlockView>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:DIYMeridianFlipTrigger}">
        <Border>
            <Border.Resources>
                <wpfutil:SharedResourceDictionary Source="/NINA.Sequencer;component/Resources/Styles/ProgressStyle.xaml" />
            </Border.Resources>
            <i:Interaction.Behaviors>
                <!--  Drop area above and below the Sequence Container  -->
                <behaviors:DragOverBehavior
                  AllowDragCenter="False"
                  DragAboveSize="25"
                  DragBelowSize="15" />
            </i:Interaction.Behaviors>
            <ninactrl:DetachingExpander>
                <ninactrl:DetachingExpander.Header>
                    <Grid
                      MinHeight="35"
                      Margin="0"
                      HorizontalAlignment="{Binding HorizontalAlignment, RelativeSource={RelativeSource AncestorType=ContentPresenter}, Mode=OneWayToSource}"
                      Background="{StaticResource SecondaryBackgroundBrush}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock 
                                   MinHeight="25"
                                   Margin="10,10,20,0"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Text="{Binding Name}" />
                                <Border
                                   Width="20"
                                   Height="20"
                                   Margin="5,0,15,0"
                                   Background="{StaticResource NotificationErrorBrush}"
                                   BorderBrush="Transparent"
                                   CornerRadius="10">
                                    <Border.Visibility>
                                        <PriorityBinding>
                                            <Binding
                                           Converter="{StaticResource ZeroToVisibilityConverter}"
                                           FallbackValue="Collapsed"
                                           Path="Issues.Count" />
                                        </PriorityBinding>
                                    </Border.Visibility>
                                    <Path
                                       HorizontalAlignment="Right"
                                       Data="{StaticResource ExclamationCircledSVG}"
                                       Fill="{StaticResource ButtonForegroundBrush}"
                                       Stretch="Uniform" />
                                    <Border.ToolTip>
                                        <ItemsControl ItemsSource="{Binding Issues}" />
                                    </Border.ToolTip>
                                </Border>
                                <StackPanel Orientation="Vertical">
                                    <StackPanel Orientation="Horizontal" Margin="0,10,0,10">
                                        <TextBlock VerticalAlignment="Center" Text="Target: " Visibility="{Binding Target, Converter={StaticResource NullToVisibilityCollapsedConverter}}"/>
                                        <TextBlock Margin="0,0,25,0" VerticalAlignment="Center" Visibility="{Binding Target, Converter={StaticResource NullToVisibilityCollapsedConverter}}">
                                            <TextBlock.Inlines>
                                                <Run FontWeight="Bold" Text="{Binding Target.TargetName}" />
                                            </TextBlock.Inlines>
                                        </TextBlock>
                                        <TextBlock VerticalAlignment="Center" Text="Pause before meridian:" />
                                        <TextBox
                                   MinWidth="25"
                                   Margin="5,0,10,0"
                                   Text="{Binding PauseTimeBeforeMeridian}"
                                   VerticalAlignment="Center"
                                   TextAlignment="Center" />
                                        <TextBlock VerticalAlignment="Center" Text="Minutes after meridian:" />
                                        <TextBox
                                   MinWidth="25"
                                   Margin="5,0,10,0"
                                   Text="{Binding MinutesAfterMeridian}"
                                   TextAlignment="Center" />
                                        <TextBlock VerticalAlignment="Center" Text="Max minutes after meridian:" />
                                        <TextBox
                                   MinWidth="25"
                                   Margin="5,0,10,0"
                                   Text="{Binding MaxMinutesAfterMeridian}"
                                   TextAlignment="Center" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock
                                   MinWidth="50"
                                   MinHeight="35"
                                   VerticalAlignment="Center">
                                            <TextBlock.Inlines>
                                                <Run FontWeight="Bold" Text="{Binding FlipStatus}" />
                                            </TextBlock.Inlines>
                                        </TextBlock>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                        <Border Grid.Column="1" Background="{StaticResource SecondaryBackgroundBrush}">
                            <ContentPresenter
                              Margin="2,0,10,0"
                              HorizontalAlignment="Right"
                              Content="{Binding}"
                              DockPanel.Dock="Right"
                              Style="{StaticResource ProgressPresenter}" />
                        </Border>
                        <Border
                           x:Name="ButtonCommands"
                           Grid.Column="2"
                           HorizontalAlignment="Stretch"
                           Background="{StaticResource SecondaryBackgroundBrush}">
                            <Control Template="{StaticResource PowerupsButtons}" />
                        </Border>
                    </Grid>
                </ninactrl:DetachingExpander.Header>
                <StackPanel Grid.Row="1" Orientation="Vertical">
                    <Border
                       MinHeight="35"
                       Margin="0,0,0,0"
                       BorderBrush="{StaticResource BorderBrush}"
                       BorderThickness="1">
                        <Grid Background="{StaticResource BackgroundBrush}" DataContext="{Binding TriggerRunner}">
                            <ItemsControl MinHeight="35" ItemsSource="{Binding Items}" />
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontStyle="Italic"
                                Opacity="0.4"
                                Text="Instructions will go here..."
                               Visibility="{Binding Items.Count, Converter={StaticResource InverseZeroToVisibilityConverter}}" />
                            <i:Interaction.Behaviors>
                                <behaviors:DragOverBehavior DragAboveSize="0" DragBelowSize="0" />
                                <behaviors:DropIntoBehavior AllowedDragDropTypesString="NINA.Sequencer.Container.ISequenceContainer;NINA.Sequencer.SequenceItem.ISequenceItem;NINA.Sequencer.TemplatedSequenceContainer" OnDropCommand="DropIntoCommand" />
                            </i:Interaction.Behaviors>
                        </Grid>
                    </Border>
                </StackPanel>
            </ninactrl:DetachingExpander>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="PowerupsLite.When.FlipRotator_Mini">
        <mini:MiniSequenceItem>
            <mini:MiniSequenceItem.SequenceItemContent>
                <StackPanel Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Text="{Binding MechanicalPosition}" />
                    <TextBlock VerticalAlignment="Center" Text="°" />
                </StackPanel>
            </mini:MiniSequenceItem.SequenceItemContent>
        </mini:MiniSequenceItem>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:FlipRotator}">
        <nina:SequenceBlockView>
            <nina:SequenceBlockView.SequenceItemContent>
                <StackPanel Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Text="Mechanical Position: " />
                    <TextBlock Margin="5,0,0,0" VerticalAlignment="Center" Text="{Binding MechanicalPosition}" />
                </StackPanel>
            </nina:SequenceBlockView.SequenceItemContent>
        </nina:SequenceBlockView>
    </DataTemplate>

    <GeometryGroup x:Key="VariableSVG">
        <PathGeometry Figures="M 92.448,3.34265C 84.0733,6.17065 77.1613,12.2134 73.24,20.1346C 26.3547,114.979 0,221.973 0,334.916C 0,447.859 26.3547,554.853 73.24,649.692C 77.1613,657.619 84.068,663.667 92.4427,666.5C 100.817,669.333 109.979,668.719 117.907,664.796C 125.828,660.88 131.875,653.973 134.708,645.599C 137.541,637.223 136.927,628.061 133.011,620.14C 90.5413,534.233 66.6667,437.5 66.6667,334.916C 66.6667,232.333 90.5413,135.599 133.011,49.6973C 136.927,41.7706 137.541,32.6094 134.708,24.2333C 131.875,15.8586 125.828,8.95197 117.907,5.03064C 109.979,1.11334 100.823,0.503967 92.448,3.34265 Z M 615.432,5.03064C 607.505,8.95197 601.459,15.8586 598.625,24.2333C 595.792,32.6094 596.407,41.7706 600.328,49.6973C 642.792,135.599 666.667,232.333 666.667,334.916C 666.667,437.5 642.792,534.233 600.328,620.14C 596.407,628.061 595.792,637.223 598.625,645.599C 601.459,653.973 607.505,660.88 615.432,664.796C 623.355,668.719 632.516,669.333 640.891,666.5C 649.265,663.667 656.172,657.619 660.088,649.692C 706.979,554.853 733.333,447.859 733.333,334.916C 733.333,221.973 706.979,114.979 660.088,20.1346C 656.172,12.2134 649.265,6.16663 640.891,3.33331C 632.516,0.5 623.355,1.11334 615.432,5.03064 Z M 257.161,189.083C 248.323,189.083 239.844,192.593 233.593,198.848C 227.339,205.099 223.828,213.577 223.828,222.416C 223.828,231.255 227.339,239.733 233.593,245.984C 239.844,252.239 248.323,255.749 257.161,255.749L 303.645,255.749C 305.495,255.749 306.855,256.749 307.421,258.744L 332.099,345.593L 254.104,437.129C 246.224,446.369 234.869,451.583 222.855,451.583L 219.855,451.583C 201.448,451.583 186.521,466.504 186.521,484.916C 186.521,503.328 201.448,518.249 219.855,518.249L 222.855,518.249C 254.391,518.249 284.412,504.364 304.88,480.359L 354.036,422.676L 366.604,466.817C 375.188,497.02 403.041,518.249 434.505,518.249L 480.989,518.249C 499.401,518.249 514.323,503.328 514.323,484.916C 514.323,466.504 499.401,451.583 480.989,451.583L 434.505,451.583C 432.656,451.583 431.297,450.577 430.729,448.588L 406.057,361.739L 484.047,270.203C 491.927,260.963 503.281,255.749 515.297,255.749L 518.292,255.749C 536.703,255.749 551.625,240.828 551.625,222.416C 551.625,204.004 536.703,189.083 518.292,189.083L 515.297,189.083C 483.76,189.083 453.74,202.968 433.271,226.973L 384.115,284.656L 371.547,240.515C 362.964,210.312 335.109,189.083 303.645,189.083"/>
    </GeometryGroup>

    <GeometryGroup x:Key="ConstantSVG">
        <PathGeometry Figures="M 482.395,5.06799C 480,2.66666 476,1.06799 472.796,1.06799C 434.395,-0.530701 393.599,2.66666 355.197,2.66666L 217.599,3.4693C 175.197,3.4693 142.395,12.272 110.395,41.068C 89.5987,60.272 70.3947,86.6667 55.1973,109.068C 53.5987,111.469 52.796,114.667 52.796,117.871C 52.796,126.667 60,133.068 68,133.068C 76.796,133.068 79.1973,127.469 83.1973,121.068C 87.1973,114.667 92.796,108.272 98.3947,102.667C 119.197,82.6667 148.796,72.272 177.599,74.6667C 153.599,141.871 119.197,219.469 70.3947,272.272C 50.3947,294.667 16,317.871 8.00001,348.272C 1.01725e-005,379.469 32,388.272 56.796,378.667C 88,366.667 106.395,334.667 122.395,307.469C 141.599,273.068 158.395,238.667 173.599,201.871C 188.796,166.667 204,130.667 218.395,95.4693C 227.197,74.6667 230.395,73.8706 252,73.8706L 312,73.8706C 289.599,122.667 268,172.272 248,222.667C 232.796,261.068 205.599,316.272 224.796,357.871C 244,398.667 298.395,383.469 328,362.667C 358.395,341.871 377.599,307.469 394.395,275.469C 397.599,269.871 400.796,262.667 398.395,256.272C 396,250.667 390.395,246.667 384,246.667C 370.395,246.667 367.197,263.469 363.197,273.871C 355.197,290.667 336,306.667 316.796,303.469C 271.197,297.068 312,216.272 320,194.667C 328,172.272 337.599,149.871 347.197,128.272C 352.796,115.469 357.599,102.667 364,90.6667C 372,74.6667 372,75.4693 390.395,74.6667C 406.395,73.8706 450.395,81.8706 464,73.068C 474.395,65.8706 481.599,39.4693 486.395,20.272C 488,13.8706 486.395,8.27197 482.395,5.06799 Z "/>
    </GeometryGroup>

    <GeometryGroup x:Key="IfSVG">
        <PathGeometry Figures="M 5,0.666667L 9,0.666667L 9,14.6667L 5,14.6667L 5,0.666667 Z "/>
        <PathGeometry Figures="M 0,5.66667L 4,5.66667L 4,14.6667L 0,14.6667L 0,5.66667 Z "/>
        <PathGeometry Figures="M 2,0.666667C 0.896,0.666667 0,1.56267 0,2.66667C 0,3.77067 0.896,4.66667 2,4.66667C 3.104,4.66667 4,3.77067 4,2.66667C 4,1.56267 3.104,0.666667 2,0.666667 Z "/>
        <PathGeometry Figures="M 10,0.666667L 14,0.666667L 14,4.66667L 10,4.66667L 10,0.666667 Z "/>
        <PathGeometry Figures="M 10,5.66667L 14,5.66667L 14,9.66667L 10,9.66667L 10,5.66667 Z "/>
    </GeometryGroup>

    <GeometryGroup x:Key="ArraySVG">
        <PathGeometry Figures="M 400,-0.213379L 400,66.4533L 533.333,66.4533L 533.333,366.453C 533.333,397.88 533.115,420.76 531.188,435.141C 529.251,449.516 527.011,453.245 523.568,456.688C 520.125,460.131 516.396,462.371 502.021,464.308C 487.64,466.24 464.76,466.453 433.333,466.453L 400,466.453L 400,533.12L 433.333,533.12C 464.76,533.12 489.005,533.333 510.937,530.385C 532.869,527.437 554.62,519.907 570.703,503.823C 586.787,487.74 594.317,465.989 597.265,444.057C 600.213,422.125 600,397.88 600,366.453L 600,-0.213379"/>
        <PathGeometry Figures="M 100,-0.213379C 45.1667,-0.213379 0,44.9533 0,99.7866L 0,533.12L 200,533.12L 200,466.453L 66.6667,466.453L 66.6667,99.7866C 66.6667,80.9839 81.1973,66.4533 100,66.4533L 200,66.4533L 200,-0.213379"/>
    </GeometryGroup>
     
</ResourceDictionary>